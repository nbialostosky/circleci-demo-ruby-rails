version: 2.1

orbs:
  ruby: circleci/ruby@1.1.0
  node: circleci/node@2

jobs:
  build:
    docker:
      - image: cimg/ruby:2.7-node
    steps:
      - checkout
      - ruby/install-deps
      # Store bundle cache
      - node/install-packages:
          pkg-manager: yarn
          cache-key: "yarn.lock"
  test:
    docker:
      - image: cimg/ruby:2.7-node
      - image: circleci/postgres:9.5-alpine
        environment:
          POSTGRES_USER: circleci-demo-ruby
          POSTGRES_DB: rails_blog_test
          POSTGRES_PASSWORD: ""
    environment:
      BUNDLE_JOBS: "3"
      BUNDLE_RETRY: "3"
      PGHOST: 127.0.0.1
      PGUSER: circleci-demo-ruby
      PGPASSWORD: ""
      RAILS_ENV: test
    steps:
      - checkout
      - ruby/install-deps
      - node/install-packages:
          pkg-manager: yarn
          cache-key: "yarn.lock"
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Database setup
          command: bundle exec rails db:schema:load --trace
      # Run rspec in parallel
      #- ruby/rspec-test
      - run:
          name: Run Rspec and automatically bisect on failure
          command: |
            STATUS="running"

            while [ "$STATUS" == "running" ]; do
              TEST_RUN=$(bundle exec rspec --format progress)
              echo $TEST_RUN
              STATUS=$(grep -cw "0 failures" <<< $TEST_RUN)
            done

            echo "finally done, checking if bisect is needed: $STATUS"
            if [[ "$STATUS" == "1" ]]; then
              echo "Proceeding with build, as triggered pipeline was success"
              exit 0
            else
              echo "Stopping build, triggered pipeline was not a success"
              exit 1
            fi
      #- ruby/rubocop-check

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
